Unused kwargs: ['bnb_8bit_quant_type', 'bnb_8bit_compute_dtype', 'bnb_8bit_use_double_quant']. These kwargs are not used in <class 'transformers.utils.quantization_config.BitsAndBytesConfig'>.
Loading checkpoint shards:   0%|          | 0/5 [00:00<?, ?it/s]Loading checkpoint shards:  20%|██        | 1/5 [00:01<00:04,  1.08s/it]Loading checkpoint shards:  40%|████      | 2/5 [00:01<00:02,  1.21it/s]Loading checkpoint shards:  60%|██████    | 3/5 [00:02<00:01,  1.37it/s]Loading checkpoint shards:  80%|████████  | 4/5 [00:02<00:00,  1.46it/s]Loading checkpoint shards: 100%|██████████| 5/5 [00:03<00:00,  1.89it/s]Loading checkpoint shards: 100%|██████████| 5/5 [00:03<00:00,  1.56it/s]
Unused kwargs: ['bnb_8bit_quant_type', 'bnb_8bit_compute_dtype', 'bnb_8bit_use_double_quant']. These kwargs are not used in <class 'transformers.utils.quantization_config.BitsAndBytesConfig'>.
model.embed_tokens.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128264, 4096])
model.layers.0.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.0.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.0.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.0.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.0.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.0.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.0.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.0.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.0.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.0.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.0.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.0.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.0.self_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.0.self_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.0.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.0.self_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.0.self_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.0.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.0.self_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.0.self_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.0.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.0.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.0.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.0.self_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.0.self_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.0.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.0.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.1.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.1.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.1.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.1.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.1.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.1.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.1.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.1.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.1.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.1.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.1.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.1.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.1.self_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.1.self_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.1.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.1.self_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.1.self_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.1.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.1.self_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.1.self_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.1.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.1.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.1.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.1.self_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.1.self_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.1.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.1.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.10.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.10.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.10.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.10.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.10.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.10.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.10.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.10.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.10.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.10.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.10.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.10.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.10.self_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.10.self_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.10.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.10.self_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.10.self_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.10.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.10.self_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.10.self_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.10.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.10.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.10.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.10.self_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.10.self_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.10.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.10.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.11.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.11.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.11.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.11.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.11.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.11.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.11.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.11.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.11.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.11.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.11.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.11.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.11.self_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.11.self_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.11.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.11.self_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.11.self_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.11.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.11.self_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.11.self_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.11.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.11.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.11.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.11.self_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.11.self_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.11.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.11.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.12.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.12.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.12.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.12.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.12.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.12.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.12.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.12.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.12.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.12.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.12.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.12.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.12.self_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.12.self_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.12.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.12.self_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.12.self_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.12.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.12.self_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.12.self_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.12.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.12.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.12.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.12.self_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.12.self_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.12.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.12.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.13.cross_attn.k_norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128])
model.layers.13.cross_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.13.cross_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.13.cross_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.13.cross_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.13.cross_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.13.cross_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.13.cross_attn.q_norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128])
model.layers.13.cross_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.13.cross_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.13.cross_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.13.cross_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.13.cross_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.13.cross_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.13.cross_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.13.cross_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.13.cross_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.13.cross_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.13.cross_attn_attn_gate: dtype=torch.float16, requires_grad=False, shape=torch.Size([1])
model.layers.13.cross_attn_mlp_gate: dtype=torch.float16, requires_grad=False, shape=torch.Size([1])
model.layers.13.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.13.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.13.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.13.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.13.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.13.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.13.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.13.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.13.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.13.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.13.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.14.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.14.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.14.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.14.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.14.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.14.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.14.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.14.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.14.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.14.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.14.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.14.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.14.self_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.14.self_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.14.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.14.self_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.14.self_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.14.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.14.self_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.14.self_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.14.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.14.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.14.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.14.self_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.14.self_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.14.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.14.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.15.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.15.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.15.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.15.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.15.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.15.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.15.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.15.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.15.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.15.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.15.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.15.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.15.self_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.15.self_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.15.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.15.self_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.15.self_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.15.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.15.self_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.15.self_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.15.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.15.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.15.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.15.self_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.15.self_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.15.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.15.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.16.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.16.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.16.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.16.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.16.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.16.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.16.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.16.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.16.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.16.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.16.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.16.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.16.self_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.16.self_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.16.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.16.self_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.16.self_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.16.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.16.self_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.16.self_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.16.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.16.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.16.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.16.self_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.16.self_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.16.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.16.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.17.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.17.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.17.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.17.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.17.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.17.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.17.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.17.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.17.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.17.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.17.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.17.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.17.self_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.17.self_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.17.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.17.self_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.17.self_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.17.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.17.self_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.17.self_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.17.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.17.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.17.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.17.self_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.17.self_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.17.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.17.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.18.cross_attn_attn_gate: dtype=torch.float16, requires_grad=False, shape=torch.Size([1])
model.layers.18.cross_attn_mlp_gate: dtype=torch.float16, requires_grad=False, shape=torch.Size([1])
model.layers.2.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.2.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.2.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.2.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.2.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.2.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.2.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.2.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.2.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.2.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.2.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.2.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.2.self_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.2.self_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.2.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.2.self_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.2.self_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.2.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.2.self_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.2.self_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.2.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.2.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.2.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.2.self_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.2.self_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.2.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.2.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.3.cross_attn.k_norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128])
model.layers.3.cross_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.3.cross_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.3.cross_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.3.cross_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.3.cross_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.3.cross_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.3.cross_attn.q_norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128])
model.layers.3.cross_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.3.cross_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.3.cross_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.3.cross_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.3.cross_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.3.cross_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.3.cross_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.3.cross_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.3.cross_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.3.cross_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.3.cross_attn_attn_gate: dtype=torch.float16, requires_grad=False, shape=torch.Size([1])
model.layers.3.cross_attn_mlp_gate: dtype=torch.float16, requires_grad=False, shape=torch.Size([1])
model.layers.3.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.3.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.3.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.3.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.3.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.3.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.3.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.3.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.3.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.3.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.3.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.4.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.4.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.4.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.4.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.4.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.4.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.4.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.4.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.4.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.4.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.4.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.4.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.4.self_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.4.self_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.4.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.4.self_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.4.self_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.4.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.4.self_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.4.self_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.4.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.4.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.4.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.4.self_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.4.self_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.4.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.4.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.5.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.5.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.5.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.5.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.5.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.5.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.5.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.5.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.5.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.5.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.5.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.5.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.5.self_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.5.self_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.5.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.5.self_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.5.self_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.5.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.5.self_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.5.self_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.5.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.5.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.5.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.5.self_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.5.self_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.5.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.5.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.6.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.6.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.6.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.6.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.6.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.6.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.6.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.6.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.6.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.6.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.6.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.6.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.6.self_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.6.self_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.6.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.6.self_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.6.self_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.6.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.6.self_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.6.self_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.6.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.6.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.6.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.6.self_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.6.self_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.6.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.6.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.7.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.7.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.7.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.7.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.7.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.7.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.7.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.7.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.7.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.7.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.7.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.7.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.7.self_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.7.self_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.7.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.7.self_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.7.self_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.7.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.7.self_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.7.self_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.7.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.7.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.7.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.7.self_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.7.self_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.7.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.7.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.8.cross_attn.k_norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128])
model.layers.8.cross_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.8.cross_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.8.cross_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.8.cross_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.8.cross_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.8.cross_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.8.cross_attn.q_norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128])
model.layers.8.cross_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.8.cross_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.8.cross_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.8.cross_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.8.cross_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.8.cross_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.8.cross_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.8.cross_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.8.cross_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.8.cross_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.8.cross_attn_attn_gate: dtype=torch.float16, requires_grad=False, shape=torch.Size([1])
model.layers.8.cross_attn_mlp_gate: dtype=torch.float16, requires_grad=False, shape=torch.Size([1])
model.layers.8.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.8.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.8.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.8.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.8.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.8.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.8.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.8.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.8.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.8.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.8.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.9.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.9.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.9.mlp.down_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 14336])
model.layers.9.mlp.down_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.9.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.9.mlp.gate_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.9.mlp.gate_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.9.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.9.mlp.up_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([14336, 4096])
model.layers.9.mlp.up_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.9.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.9.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.9.self_attn.k_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.9.self_attn.k_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.9.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.9.self_attn.o_proj.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.9.self_attn.o_proj.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.9.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.9.self_attn.q_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([4096, 4096])
model.layers.9.self_attn.q_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.9.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.9.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.9.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.9.self_attn.v_proj.base_layer.weight: dtype=torch.int8, requires_grad=False, shape=torch.Size([1024, 4096])
model.layers.9.self_attn.v_proj.base_layer.weight_format: dtype=torch.uint8, requires_grad=False, shape=torch.Size([])
model.layers.9.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.9.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.18.cross_attn.k_norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128])
model.layers.18.cross_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.18.cross_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.18.cross_attn.q_norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128])
model.layers.18.cross_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.18.cross_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.18.cross_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.18.cross_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.18.cross_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.18.cross_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.18.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.18.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.18.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.18.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.18.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.19.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.19.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.19.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.19.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.19.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.19.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.19.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.19.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.19.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.19.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.19.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.19.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.19.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.20.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.20.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.20.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.20.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.20.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.20.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.20.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.20.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.20.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.20.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.20.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.20.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.20.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.21.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.21.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.21.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.21.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.21.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.21.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.21.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.21.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.21.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.21.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.21.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.21.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.21.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.22.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.22.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.22.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.22.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.22.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.22.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.22.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.22.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.22.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.22.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.22.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.22.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.22.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.23.cross_attn.k_norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128])
model.layers.23.cross_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.23.cross_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.23.cross_attn.q_norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128])
model.layers.23.cross_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.23.cross_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.23.cross_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.23.cross_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.23.cross_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.23.cross_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.23.cross_attn_attn_gate: dtype=torch.float16, requires_grad=False, shape=torch.Size([1])
model.layers.23.cross_attn_mlp_gate: dtype=torch.float16, requires_grad=False, shape=torch.Size([1])
model.layers.23.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.23.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.23.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.23.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.23.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.24.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.24.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.24.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.24.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.24.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.24.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.24.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.24.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.24.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.24.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.24.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.24.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.24.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.25.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.25.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.25.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.25.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.25.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.25.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.25.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.25.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.25.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.25.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.25.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.25.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.25.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.26.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.26.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.26.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.26.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.26.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.26.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.26.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.26.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.26.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.26.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.26.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.26.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.26.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.27.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.27.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.27.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.27.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.27.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.27.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.27.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.27.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.27.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.27.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.27.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.27.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.27.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.28.cross_attn.k_norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128])
model.layers.28.cross_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.28.cross_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.28.cross_attn.q_norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128])
model.layers.28.cross_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.28.cross_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.28.cross_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.28.cross_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.28.cross_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.28.cross_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.28.cross_attn_attn_gate: dtype=torch.float16, requires_grad=False, shape=torch.Size([1])
model.layers.28.cross_attn_mlp_gate: dtype=torch.float16, requires_grad=False, shape=torch.Size([1])
model.layers.28.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.28.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.28.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.28.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.28.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.29.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.29.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.29.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.29.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.29.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.29.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.29.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.29.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.29.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.29.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.29.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.29.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.29.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.30.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.30.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.30.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.30.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.30.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.30.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.30.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.30.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.30.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.30.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.30.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.30.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.30.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.31.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.31.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.31.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.31.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.31.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.31.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.31.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.31.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.31.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.31.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.31.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.31.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.31.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.32.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.32.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.32.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.32.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.32.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.32.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.32.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.32.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.32.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.32.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.32.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.32.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.32.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.33.cross_attn.k_norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128])
model.layers.33.cross_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.33.cross_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.33.cross_attn.q_norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128])
model.layers.33.cross_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.33.cross_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.33.cross_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.33.cross_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.33.cross_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.33.cross_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.33.cross_attn_attn_gate: dtype=torch.float16, requires_grad=False, shape=torch.Size([1])
model.layers.33.cross_attn_mlp_gate: dtype=torch.float16, requires_grad=False, shape=torch.Size([1])
model.layers.33.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.33.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.33.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.33.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.33.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.34.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.34.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.34.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.34.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.34.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.34.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.34.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.34.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.34.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.34.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.34.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.34.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.34.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.35.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.35.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.35.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.35.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.35.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.35.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.35.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.35.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.35.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.35.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.35.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.35.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.35.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.36.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.36.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.36.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.36.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.36.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.36.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.36.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.36.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.36.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.36.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.36.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.36.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.36.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.37.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.37.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.37.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.37.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.37.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.37.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.37.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.37.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.37.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.37.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.37.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.37.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.37.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.38.cross_attn.k_norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128])
model.layers.38.cross_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.38.cross_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.38.cross_attn.q_norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128])
model.layers.38.cross_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.38.cross_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.38.cross_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.38.cross_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.38.cross_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.38.cross_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.layers.38.cross_attn_attn_gate: dtype=torch.float16, requires_grad=False, shape=torch.Size([1])
model.layers.38.cross_attn_mlp_gate: dtype=torch.float16, requires_grad=False, shape=torch.Size([1])
model.layers.38.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.38.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.38.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.38.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.38.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.39.input_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.39.mlp.down_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.39.mlp.gate_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.39.mlp.up_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([14336])
model.layers.39.post_attention_layernorm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
model.layers.39.self_attn.k_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.39.self_attn.o_proj.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.39.self_attn.q_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096])
model.layers.39.self_attn.q_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.39.self_attn.q_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([4096, 16])
model.layers.39.self_attn.v_proj.base_layer.SCB: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024])
model.layers.39.self_attn.v_proj.lora_A.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([16, 4096])
model.layers.39.self_attn.v_proj.lora_B.default.weight: dtype=torch.float32, requires_grad=False, shape=torch.Size([1024, 16])
model.norm.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([4096])
lm_head.weight: dtype=torch.float16, requires_grad=False, shape=torch.Size([128256, 4096])
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:00<00:00,  4.97it/s]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:00<00:00,  4.85it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:00<00:00,  6.15it/s]Loading checkpoint shards: 100%|██████████| 3/3 [00:00<00:00,  5.75it/s]
Traceback (most recent call last):
  File "/scratch/oe2015/ai_project/DeTikZify/detikzify/evaluate/omar.py", line 103, in <module>
    model = MllamaForCausalLM.from_pretrained(
  File "/scratch/oe2015/conda-envs/greedy/lib/python3.9/site-packages/transformers/modeling_utils.py", line 4225, in from_pretrained
    ) = cls._load_pretrained_model(
  File "/scratch/oe2015/conda-envs/greedy/lib/python3.9/site-packages/transformers/modeling_utils.py", line 4785, in _load_pretrained_model
    raise RuntimeError(f"Error(s) in loading state_dict for {model.__class__.__name__}:\n\t{error_msg}")
RuntimeError: Error(s) in loading state_dict for MllamaForCausalLM:
	While copying the parameter named "model.layers.0.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.0.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.0.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.0.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.0.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.1.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.1.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.1.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.1.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.1.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.2.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.2.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.2.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.2.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.2.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.3.cross_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.3.cross_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.3.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.3.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.3.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.4.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.4.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.4.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.4.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.4.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.5.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.5.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.5.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.5.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.5.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.6.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.6.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.6.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.6.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.6.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.7.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.7.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.7.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.7.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.7.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.8.cross_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.8.cross_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.8.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.8.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.8.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.9.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.9.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.9.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.9.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.9.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.10.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.10.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.10.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.10.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.10.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.11.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.11.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.11.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.11.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.11.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.12.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.12.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.12.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.12.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.12.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.13.cross_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.13.cross_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.13.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.13.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.13.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.14.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.14.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.14.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.14.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.14.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.15.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.15.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.15.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.15.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.15.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.16.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.16.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.16.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.16.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.16.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.17.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.17.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.17.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.17.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.17.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.18.cross_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.18.cross_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.18.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.18.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.18.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.19.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.19.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.19.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.19.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.19.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.20.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.20.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.20.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.20.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.20.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.21.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.21.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.21.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.21.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.21.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.22.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.22.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.22.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.22.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.22.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.23.cross_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.23.cross_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.23.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.23.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.23.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.24.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.24.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.24.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.24.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.24.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.25.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.25.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.25.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.25.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.25.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.26.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.26.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.26.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.26.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.26.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.27.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.27.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.27.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.27.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.27.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.28.cross_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.28.cross_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.28.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.28.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.28.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.29.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.29.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.29.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.29.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.29.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.30.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.30.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.30.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.30.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.30.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.31.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.31.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.31.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.31.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.31.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.32.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.32.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.32.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.32.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.32.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.33.cross_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.33.cross_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.33.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.33.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.33.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.34.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.34.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.34.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.34.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.34.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.35.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.35.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.35.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.35.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.35.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.36.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.36.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.36.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.36.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.36.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.37.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.37.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.37.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.37.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.37.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.38.cross_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.38.cross_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.38.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.38.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.38.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.39.self_attn.k_proj.weight", whose dimensions in the model are torch.Size([1024, 4096]) and whose dimensions in the checkpoint are torch.Size([1024, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.39.self_attn.o_proj.weight", whose dimensions in the model are torch.Size([4096, 4096]) and whose dimensions in the checkpoint are torch.Size([4096, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.39.mlp.gate_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.39.mlp.up_proj.weight", whose dimensions in the model are torch.Size([14336, 4096]) and whose dimensions in the checkpoint are torch.Size([14336, 4096]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
	While copying the parameter named "model.layers.39.mlp.down_proj.weight", whose dimensions in the model are torch.Size([4096, 14336]) and whose dimensions in the checkpoint are torch.Size([4096, 14336]), an exception occurred : ('Only Tensors of floating point and complex dtype can require gradients',).
